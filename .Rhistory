panel.grid.major.y = element_line(linetype = 2, size = .3,
color = "lightgrey"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA),
plot.background = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(20, 7, 5.5, 5.5), "pt"),
text = element_text(size = 12),
axis.text = element_text(angle = 90))
# Get the quantiles
(quant_pss <- round(quantile(x = bica_out$pars$curr_pred_pss, probs = c(0.025, 0.1, 0.5, 0.9, 0.975))))
# Get the PSS passage
tt <- sum(pss_hist$count[pss_hist$Year == 2023]) / 1000
# Put everything into a dataframe for plotting
predDF <- data.frame("quant" = c(quant_pss/1000), "PSS" = rep(tt, length(quant_pss)),
"percent" = c("2.5%","10%","50%","90%","97.5%"))
predDF$percent<- as.factor(predDF$percent)
predDF
trial <- seq(from = 0, to = 300000, by = 1000)
length(trial)
reg.mat <- matrix(nrow = length(bica_out$pars$alpha),
ncol = length(trial))
for(i in 1:length(trial)){
reg.mat[,i] <- trial[i]*bica_out$pars$beta + bica_out$pars$alpha
}
quant.predPSS.beta <- apply(X = reg.mat,
MARGIN = 2,
FUN = quantile,
probs = c(0.025, 0.25, 0.5, 0.75, 0.975))
# Get order of cumPSS for polygon below
cumPSS_all <- bica_data$cum_pss_all
totalEOS <- bica_data$total_eos
ord <- order(trial)
yearPSS <- c(2005:2022)
# Regression plot for non-GSI-adjusted PSS passage
plot(x = cumPSS_all/1000, y = totalEOS/1000,
type = "p",
pch = 21,
bg = "red",
xlab = paste("Season Total PSS Chinook Salmon (1000's)" ),
ylab = ("Canadian Chinook Salmon (1000's)"),
xlim = c(0,(max(cumPSS_all/1000)+20)),
ylim = c(min(quant.predPSS.beta/1000),
max(quant.predPSS.beta/1000)+30),
cex.axis = 1.2,
cex.lab = 1.2)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[1,ord]/1000,rev(quant.predPSS.beta[5,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[2,ord]/1000,rev(quant.predPSS.beta[4,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
lines(x = trial[ord]/1000, quant.predPSS.beta[3,ord]/1000,
col = "red",
lw = 2)
segments(x0 = mean(bica_out$pars$cum_current_pss)/1000,
x1 = mean(bica_out$pars$cum_current_pss)/1000,
y0 = 0,
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
segments(x0 = 0,
x1 = mean(bica_out$pars$cum_current_pss)/1000,
y0 = predDF$quant[predDF$percent=="50%"],
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
points(x = mean(bica_out$pars$cum_current_pss)/1000,
y = predDF$quant[predDF$percent=="50%"],
pch = 22,
bg = "blue",
cex = 2)
grid()
text(x = cumPSS_all/1000, y = (totalEOS/1000)+10, labels = c(2005:2022))
text(x = mean(bica_out$pars$cum_current_pss)/1000, y = predDF$quant[predDF$percent=="50%"]+20, "2023", col = "blue")
legend("bottomright",
legend = c(paste0("Past Years (2005 -",myYear-1,")"),
paste0(myYear,"PSS prediction")),
pch = c(21,22),
col= c("red","blue")
)
# Get the quantiles
(quant_pss <- round(quantile(x = bica_out$pars$curr_pred_pss, probs = c(0.025, 0.1, 0.5, 0.9, 0.975))))
# Get the PSS passage
tt <- sum(pss_hist$count[pss_hist$Year == 2023]) / 1000
# Put everything into a dataframe for plotting
predDF <- data.frame("quant" = c(quant_pss/1000), "PSS" = rep(tt, length(quant_pss)),
"percent" = c("2.5%","10%","50%","90%","97.5%"))
predDF$percent<- as.factor(predDF$percent)
predDF
trial <- seq(from = 0, to = 300000, by = 1000)
length(trial)
reg.mat <- matrix(nrow = length(bica_out$pars$alpha),
ncol = length(trial))
for(i in 1:length(trial)){
reg.mat[,i] <- trial[i]*bica_out$pars$beta + bica_out$pars$alpha
}
quant.predPSS.beta <- apply(X = reg.mat,
MARGIN = 2,
FUN = quantile,
probs = c(0.025, 0.25, 0.5, 0.75, 0.975))
# Get order of cumPSS for polygon below
cumPSS_all <- bica_data$cum_pss_all
totalEOS <- bica_data$total_eos
ord <- order(trial)
yearPSS <- c(2005:2022)
# Regression plot for non-GSI-adjusted PSS passage
plot(x = cumPSS_all/1000, y = totalEOS/1000,
type = "p",
pch = 21,
bg = "red",
xlab = paste("Season Total PSS Chinook Salmon (1000's)" ),
ylab = ("Canadian Chinook Salmon (1000's)"),
xlim = c(0,(max(cumPSS_all/1000)+20)),
ylim = c(min(quant.predPSS.beta/1000),
max(quant.predPSS.beta/1000)+30),
cex.axis = 1.2,
cex.lab = 1.2)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[1,ord]/1000,rev(quant.predPSS.beta[5,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[2,ord]/1000,rev(quant.predPSS.beta[4,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
lines(x = trial[ord]/1000, quant.predPSS.beta[3,ord]/1000,
col = "red",
lw = 2)
segments(x0 = mean(bica_out$pars$cum_current_pss)/1000,
x1 = mean(bica_out$pars$cum_current_pss)/1000,
y0 = 0,
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
segments(x0 = 0,
x1 = mean(bica_out$pars$cum_current_pss)/1000,
y0 = predDF$quant[predDF$percent=="50%"],
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
points(x = mean(bica_out$pars$cum_current_pss)/1000,
y = predDF$quant[predDF$percent=="50%"],
pch = 22,
bg = "blue",
cex = 2)
grid()
text(x = cumPSS_all/1000, y = (totalEOS/1000)+10, labels = c(2005:2022))
text(x = mean(bica_out$pars$cum_current_pss)/1000, y = predDF$quant[predDF$percent=="50%"]+20, "2023", col = "blue")
legend("bottomright",
legend = c(paste0("Past Years (2005 - ", my_year-1,")"),
paste0(my_year, "PSS prediction")),
pch = c(21, 22),
col= c("red", "blue")
)
mean(bica_out$pars$cum_current_pss)/1000
View(bica_out)
View(bica_data)
# Get the quantiles
(quant_pss <- round(quantile(x = bica_out$pars$curr_pred_pss, probs = c(0.025, 0.1, 0.5, 0.9, 0.975))))
# Get the PSS passage
tt <- sum(pss_hist$count[pss_hist$Year == 2023]) / 1000
# Put everything into a dataframe for plotting
predDF <- data.frame("quant" = c(quant_pss/1000), "PSS" = rep(tt, length(quant_pss)),
"percent" = c("2.5%","10%","50%","90%","97.5%"))
predDF$percent<- as.factor(predDF$percent)
predDF
trial <- seq(from = 0, to = 300000, by = 1000)
length(trial)
reg.mat <- matrix(nrow = length(bica_out$pars$alpha),
ncol = length(trial))
for(i in 1:length(trial)){
reg.mat[,i] <- trial[i]*bica_out$pars$beta + bica_out$pars$alpha
}
quant.predPSS.beta <- apply(X = reg.mat,
MARGIN = 2,
FUN = quantile,
probs = c(0.025, 0.25, 0.5, 0.75, 0.975))
# Get order of cumPSS for polygon below
cumPSS_all <- bica_data$cum_pss_all
totalEOS <- bica_data$total_eos
ord <- order(trial)
yearPSS <- c(2005:2022)
# Regression plot for non-GSI-adjusted PSS passage
plot(x = cumPSS_all/1000, y = totalEOS/1000,
type = "p",
pch = 21,
bg = "red",
xlab = paste("Season Total PSS Chinook Salmon (1000's)" ),
ylab = ("Canadian Chinook Salmon (1000's)"),
xlim = c(0,(max(cumPSS_all/1000)+20)),
ylim = c(min(quant.predPSS.beta/1000),
max(quant.predPSS.beta/1000)+30),
cex.axis = 1.2,
cex.lab = 1.2)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[1,ord]/1000,rev(quant.predPSS.beta[5,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[2,ord]/1000,rev(quant.predPSS.beta[4,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
lines(x = trial[ord]/1000, quant.predPSS.beta[3,ord]/1000,
col = "red",
lw = 2)
segments(x0 = mean(bica_data$cum_current_pss)/1000,
x1 = mean(bica_data$cum_current_pss)/1000,
y0 = 0,
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
segments(x0 = 0,
x1 = mean(bica_data$cum_current_pss)/1000,
y0 = predDF$quant[predDF$percent=="50%"],
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
points(x = mean(bica_data$cum_current_pss)/1000,
y = predDF$quant[predDF$percent=="50%"],
pch = 22,
bg = "blue",
cex = 2)
grid()
text(x = cumPSS_all/1000, y = (totalEOS/1000)+10, labels = c(2005:2022))
text(x = mean(bica_data$cum_current_pss)/1000, y = predDF$quant[predDF$percent=="50%"]+20, "2023", col = "blue")
legend("bottomright",
legend = c(paste0("Past Years (2005-", my_year - 1, ")"),
paste0(my_year, " PSS prediction")),
pch = c(21, 22),
col= c("red", "blue")
)
mean(bica_data$cum_current_pss)
mean(bica_data$cum_curr_pss)
# Get the quantiles
(quant_pss <- round(quantile(x = bica_out$pars$curr_pred_pss, probs = c(0.025, 0.1, 0.5, 0.9, 0.975))))
# Get the PSS passage
tt <- sum(pss_hist$count[pss_hist$Year == 2023]) / 1000
# Put everything into a dataframe for plotting
predDF <- data.frame("quant" = c(quant_pss/1000), "PSS" = rep(tt, length(quant_pss)),
"percent" = c("2.5%","10%","50%","90%","97.5%"))
predDF$percent<- as.factor(predDF$percent)
predDF
trial <- seq(from = 0, to = 300000, by = 1000)
length(trial)
reg.mat <- matrix(nrow = length(bica_out$pars$alpha),
ncol = length(trial))
for(i in 1:length(trial)){
reg.mat[,i] <- trial[i]*bica_out$pars$beta + bica_out$pars$alpha
}
quant.predPSS.beta <- apply(X = reg.mat,
MARGIN = 2,
FUN = quantile,
probs = c(0.025, 0.25, 0.5, 0.75, 0.975))
# Get order of cumPSS for polygon below
cumPSS_all <- bica_data$cum_pss_all
totalEOS <- bica_data$total_eos
ord <- order(trial)
yearPSS <- c(2005:2022)
# Regression plot for non-GSI-adjusted PSS passage
plot(x = cumPSS_all/1000, y = totalEOS/1000,
type = "p",
pch = 21,
bg = "red",
xlab = paste("Season Total PSS Chinook Salmon (1000's)" ),
ylab = ("Canadian Chinook Salmon (1000's)"),
xlim = c(0,(max(cumPSS_all/1000)+20)),
ylim = c(min(quant.predPSS.beta/1000),
max(quant.predPSS.beta/1000)+30),
cex.axis = 1.2,
cex.lab = 1.2)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[1,ord]/1000,rev(quant.predPSS.beta[5,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[2,ord]/1000,rev(quant.predPSS.beta[4,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
lines(x = trial[ord]/1000, quant.predPSS.beta[3,ord]/1000,
col = "red",
lw = 2)
segments(x0 = mean(bica_data$cum_curr_pss)/1000,
x1 = mean(bica_data$cum_curr_pss)/1000,
y0 = 0,
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
segments(x0 = 0,
x1 = mean(bica_data$cum_curr_pss)/1000,
y0 = predDF$quant[predDF$percent=="50%"],
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
points(x = mean(bica_data$cum_curr_pss)/1000,
y = predDF$quant[predDF$percent=="50%"],
pch = 22,
bg = "blue",
cex = 2)
grid()
text(x = cumPSS_all/1000, y = (totalEOS/1000)+10, labels = c(2005:2022))
text(x = mean(bica_data$cum_curr_pss)/1000, y = predDF$quant[predDF$percent=="50%"]+20, "2023", col = "blue")
legend("bottomright",
legend = c(paste0("Past Years (2005-", my_year - 1, ")"),
paste0(my_year, " PSS prediction")),
pch = c(21, 22),
col= c("red", "blue")
)
# Get the quantiles
(quant_pss <- round(quantile(x = bica_out$pars$curr_pred_pss, probs = c(0.025, 0.1, 0.5, 0.9, 0.975))))
# Get the PSS passage
tt <- sum(pss_hist$count[pss_hist$Year == 2023]) / 1000
# Put everything into a dataframe for plotting
predDF <- data.frame("quant" = c(quant_pss/1000), "PSS" = rep(tt, length(quant_pss)),
"percent" = c("2.5%","10%","50%","90%","97.5%"))
predDF$percent<- as.factor(predDF$percent)
predDF
trial <- seq(from = 0, to = 350000, by = 1000)
length(trial)
reg.mat <- matrix(nrow = length(bica_out$pars$alpha),
ncol = length(trial))
for(i in 1:length(trial)){
reg.mat[,i] <- trial[i]*bica_out$pars$beta + bica_out$pars$alpha
}
quant.predPSS.beta <- apply(X = reg.mat,
MARGIN = 2,
FUN = quantile,
probs = c(0.025, 0.25, 0.5, 0.75, 0.975))
# Get order of cumPSS for polygon below
cumPSS_all <- bica_data$cum_pss_all
totalEOS <- bica_data$total_eos
ord <- order(trial)
yearPSS <- c(2005:2022)
# Regression plot for non-GSI-adjusted PSS passage
plot(x = cumPSS_all/1000, y = totalEOS/1000,
type = "p",
pch = 21,
bg = "red",
xlab = paste("Season Total PSS Chinook Salmon (1000's)" ),
ylab = ("Canadian Chinook Salmon (1000's)"),
xlim = c(0,(max(cumPSS_all/1000)+20)),
ylim = c(min(quant.predPSS.beta/1000),
max(quant.predPSS.beta/1000)+30),
cex.axis = 1.2,
cex.lab = 1.2)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[1,ord]/1000,rev(quant.predPSS.beta[5,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
polygon(x = c(trial[ord]/1000, rev(trial[ord]/1000)),
y = c(quant.predPSS.beta[2,ord]/1000,rev(quant.predPSS.beta[4,ord]/1000)),
col=rgb(1,.6,0, alpha=0.2), border=FALSE)
lines(x = trial[ord]/1000, quant.predPSS.beta[3,ord]/1000,
col = "red",
lw = 2)
segments(x0 = mean(bica_data$cum_curr_pss)/1000,
x1 = mean(bica_data$cum_curr_pss)/1000,
y0 = 0,
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
segments(x0 = 0,
x1 = mean(bica_data$cum_curr_pss)/1000,
y0 = predDF$quant[predDF$percent=="50%"],
y1 = predDF$quant[predDF$percent=="50%"],
lwd = 2,
col = "blue")
points(x = mean(bica_data$cum_curr_pss)/1000,
y = predDF$quant[predDF$percent=="50%"],
pch = 22,
bg = "blue",
cex = 2)
grid()
text(x = cumPSS_all/1000, y = (totalEOS/1000)+10, labels = c(2005:2022))
text(x = mean(bica_data$cum_curr_pss)/1000, y = predDF$quant[predDF$percent=="50%"]+20, "2023", col = "blue")
legend("bottomright",
legend = c(paste0("Past Years (2005-", my_year - 1, ")"),
paste0(my_year, " PSS prediction")),
pch = c(21, 22),
col= c("red", "blue")
)
# Posterior EOS Can-orig run size estimate
df.run <- data.frame("par" = "Runsize",
"value" = bica_out$pars$run_size)
# PF (prior)
df.prior <- data.frame("par" = "Prior",
"value" = bica_out$pars$prior_pf)
# PSS prediction density
df.postPredPss <- data.frame("par" = "PSS Prediction",
"value" = bica_out$pars$post_curr_pred_pss)
# Eagle prediction density
df.postPredEagle <- data.frame("par" = "Eagle Prediction",
"value" = bica_out$pars$post_curr_pred_eagle)
# Bind into one data frame with 2 columns for plotting
df.comb <- rbind(df.prior,
df.postPredPss,
df.postPredEagle,
df.run)
str(df.comb)
df.comb$par <- as.factor(df.comb$par)
df.comb$par <- relevel(df.comb$par, "Prior")
# Density plots comparing pf, linear prediction, and posterior estimate
# ggplot(df.comb[df.comb$par != "Eagle Prediction", ], aes(x = value/1000, fill = par))+
ggplot(df.comb, aes(x = value/1000, fill = par))+
geom_density(alpha = .5, n = 1e5)+
ggtitle(projection_day)+
theme_classic()+
# ylim(c(0,500))
labs(x = "Canadian-origin Chinook Salmon ('000's)",
fill = "Parameters",
y = "Relative Probability") +
scale_x_continuous() +
scale_fill_colorblind(name = "",
labels = c( "Preseason Forecast (Prior)",
"Eagle Prediction",
"PSS Prediction",
"Run size")) +
theme(text = element_text(size = 16),
legend.text = element_text(size = 12),
panel.grid.major = element_line(), # strip major gridlines
panel.grid.minor = element_blank(), # strip minor gridlines
legend.position = "top",
axis.ticks = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black")) +
scale_color_discrete(name = "") +
coord_cartesian(xlim = c(0,65))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, results = FALSE, warning = FALSE)
pacman::p_load(tidyverse, kableExtra, ggthemes)
# Posterior EOS Can-orig run size estimate
df.run <- data.frame("par" = "Runsize",
"value" = bica_out$pars$run_size)
# PF (prior)
df.prior <- data.frame("par" = "Prior",
"value" = bica_out$pars$prior_pf)
# PSS prediction density
df.postPredPss <- data.frame("par" = "PSS Prediction",
"value" = bica_out$pars$post_curr_pred_pss)
# Eagle prediction density
df.postPredEagle <- data.frame("par" = "Eagle Prediction",
"value" = bica_out$pars$post_curr_pred_eagle)
# Bind into one data frame with 2 columns for plotting
df.comb <- rbind(df.prior,
df.postPredPss,
df.postPredEagle,
df.run)
str(df.comb)
df.comb$par <- as.factor(df.comb$par)
df.comb$par <- relevel(df.comb$par, "Prior")
# Density plots comparing pf, linear prediction, and posterior estimate
# ggplot(df.comb[df.comb$par != "Eagle Prediction", ], aes(x = value/1000, fill = par))+
ggplot(df.comb, aes(x = value/1000, fill = par))+
geom_density(alpha = .5, n = 1e5)+
ggtitle(projection_day)+
theme_classic()+
# ylim(c(0,500))
labs(x = "Canadian-origin Chinook Salmon ('000's)",
fill = "Parameters",
y = "Relative Probability") +
scale_x_continuous() +
scale_fill_colorblind(name = "",
labels = c( "Preseason Forecast (Prior)",
"Eagle Prediction",
"PSS Prediction",
"Run size")) +
theme(text = element_text(size = 16),
legend.text = element_text(size = 12),
panel.grid.major = element_line(), # strip major gridlines
panel.grid.minor = element_blank(), # strip minor gridlines
legend.position = "top",
axis.ticks = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black")) +
scale_color_discrete(name = "") +
coord_cartesian(xlim = c(0,65))
ggplot(df.comb, aes(x = value/1000, y =fct_rev( par))) +
stat_eye(aes(fill = after_stat(level)), .width = c(.8,.95,1), alpha = .5) +
labs(x = "1000's of Chinook Salmon",
fill = "Parameters",
y = "Parameter")+
scale_fill_colorblind(name = "Credible Interval",
labels = c( "100%", "95%","80%")) +
scale_x_continuous() +
theme_tidybayes() +
theme(text = element_text(size = 20, family = "serif"),
legend.position = "top",
panel.grid.major = element_line(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black")) +
scale_color_discrete(name = "") +
guides(fill = guide_legend(override.aes = list(size = 5))) +
coord_cartesian(xlim = c(0,max(df.comb$value/1000)))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, results = FALSE, warning = FALSE)
pacman::p_load(tidyverse, kableExtra, ggthemes, gg_dist)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, results = FALSE, warning = FALSE)
pacman::p_load(tidyverse, kableExtra, ggthemes, ggdist)
ggplot(df.comb, aes(x = value/1000, y =fct_rev( par))) +
stat_eye(aes(fill = after_stat(level)), .width = c(.8,.95,1), alpha = .5) +
labs(x = "1000's of Chinook Salmon",
fill = "Parameters",
y = "Parameter")+
scale_fill_colorblind(name = "Credible Interval",
labels = c( "100%", "95%","80%")) +
scale_x_continuous() +
theme_tidybayes() +
theme(text = element_text(size = 20, family = "serif"),
legend.position = "top",
panel.grid.major = element_line(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black")) +
scale_color_discrete(name = "") +
guides(fill = guide_legend(override.aes = list(size = 5))) +
coord_cartesian(xlim = c(0,max(df.comb$value/1000)))
5e4
